# CI-specific Docker Compose configuration
# Optimized for GitHub Actions AMD64 runners with SvelteKit frontend

services:
  # Backend API service for CI
  radio-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
    platform: linux/amd64
    container_name: radio-backend-ci
    hostname: radio-backend
    ports:
      - "8000:8000"
    environment:
      # Application settings
      - NODE_ENV=development
      - API_PORT=8000
      - WIFI_INTERFACE=wlan0
      - HOSTNAME=radio

      # Hotspot configuration
      - HOTSPOT_SSID=Radio-Setup
      - HOTSPOT_PASSWORD=radio123
      - HOTSPOT_IP=192.168.4.1

      # CI optimizations
      - PYTHONDONTWRITEBYTECODE=1
      - PIP_NO_CACHE_DIR=1
      - DEBUG=0
    networks:
      - radio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"

  # Frontend CI test service (nginx + static build)
  radio-frontend:
    image: nginx:alpine
    container_name: radio-frontend-ci
    hostname: radio-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - BACKEND_HOST=radio-backend
      - BACKEND_PORT=8000
    networks:
      - radio-network
    depends_on:
      radio-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.5"

# Custom network for CI
networks:
  radio-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

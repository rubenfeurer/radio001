# Backend Dockerfile for FastAPI development
# Optimized for Raspberry Pi and development workflow with Apple Silicon support

FROM python:3.11-slim

# Install system dependencies for WiFi management and build tools
RUN apt-get update && apt-get install -y \
    wireless-tools \
    wpasupplicant \
    hostapd \
    dnsmasq \
    iproute2 \
    iputils-ping \
    curl \
    sudo \
    procps \
    net-tools \
    build-essential \
    gcc \
    g++ \
    make \
    pkg-config \
    libffi-dev \
    libssl-dev \
    cargo \
    rustc \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Create non-root user for development
RUN groupadd -r radio && useradd -r -g radio radio

# Copy requirements first for better caching
COPY backend/requirements.txt .

# Install Python dependencies with Apple Silicon compatibility
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --upgrade setuptools-rust && \
    CARGO_NET_GIT_FETCH_WITH_CLI=true pip install --no-cache-dir -r requirements.txt

# Copy entrypoint script
COPY docker/entrypoint-backend.sh /entrypoint.sh

# Copy application code
COPY backend/ .

# Make entrypoint executable
RUN chmod +x /entrypoint.sh

# Change ownership to radio user
RUN chown -R radio:radio /app

# Switch to non-root user
USER radio

# Expose the application port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set environment variables
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    API_PORT=8000

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]

# Default command
CMD ["start"]
